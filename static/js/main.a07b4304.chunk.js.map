{"version":3,"sources":["actions/index.js","reducers/index.js","store.js","components/description_card.jsx","components/product_view.jsx","components/cart_view.jsx","containers/main_content.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchProducts","dispatch","type","axios","get","then","data","fetchProductsSuccess","catch","error","fetchProductsError","addToCart","deleteFromCart","initialState","pending","products","addedProducts","rootReducer","state","action","amiibo","filter","product","name","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","AmiiboCard","this","props","elevation","className","CardActionArea","CardMedia","image","title","character","CardContent","amiiboSeries","CardActions","Fab","variant","size","color","onClick","React","Component","ProductView","Grid","container","spacing","justify","alignItems","CircularProgress","map","item","xs","CartView","cartProducts","direction","sm","Paper","src","alt","style","width","gameSeries","padding","length","MainContent","Popper","placement","open","disablePortal","to","Button","AppBar","position","Toolbar","renderCart","Container","fixed","exact","path","component","connect","bindActionCreators","App","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.a07b4304.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const FETCH_PRODUCTS_PENDING = 'FETCH_PRODUCTS_PENDING';\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\nexport const FETCH_PRODUCTS_ERROR = 'FETCH_PRODUCTS_ERROR';\n\nexport const ADD_TO_CART= 'ADD_TO_CART';\nexport const DELETE_FROM_CART = 'DELETE_FROM_CART';\n\nfunction fetchProductsPending () {\n  return {\n    type: FETCH_PRODUCTS_PENDING\n  }\n}\n\nfunction fetchProductsSuccess (data) {\n  return {\n    type: FETCH_PRODUCTS_SUCCESS,\n    data: data\n  }\n}\n\nfunction fetchProductsError (error) {\n  return {\n    type: FETCH_PRODUCTS_ERROR,\n    error: error\n  }\n}\n\nexport function fetchProducts () {\n  return function(dispatch) {\n    dispatch(fetchProductsPending())\n    return axios.get(\"https://www.amiiboapi.com/api/amiibo\")\n      .then(({ data }) => {\n        dispatch(fetchProductsSuccess(data));\n      })\n      .catch(error => {\n        dispatch(fetchProductsError(error))\n      })\n  };\n}\n\n\nexport function addToCart (data) {\n  return {\n    type: ADD_TO_CART,\n    data: data\n  }\n}\n\nexport function deleteFromCart (data) {\n  return {\n    type: DELETE_FROM_CART,\n    data: data\n  }\n}\n","import { \n  FETCH_PRODUCTS_PENDING, \n  FETCH_PRODUCTS_SUCCESS, \n  FETCH_PRODUCTS_ERROR, \n  ADD_TO_CART,\n  DELETE_FROM_CART\n} \nfrom '../actions';\n\nconst initialState = {\n  pending: false,\n  products: [],\n  error: null,\n  addedProducts: []\n}\n\nexport function rootReducer (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS_PENDING:\n      return {\n        ...state,\n        pending: true\n      }\n    case FETCH_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        products: action.data.amiibo\n      }\n    case FETCH_PRODUCTS_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      }\n    case ADD_TO_CART:\n      return {\n        ...state,\n        addedProducts: [...state.addedProducts, action.data]\n      }\n    case DELETE_FROM_CART: \n      return {\n        ...state,\n        addedProducts: state.addedProducts.filter(product => action.data!== product.name),\n      }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer\n\nexport const getProducts = state => state.products;\nexport const getProductsPending = state => state.pending;\nexport const getProductsError = state => state.error;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer, \n  composeEnhancers(\n    applyMiddleware(thunk))\n  );\n\nexport default store;","import React from 'react';\nimport Card from '@material-ui/core/Paper';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Fab from '@material-ui/core/Fab';\n\nclass AmiiboCard extends React.Component {\n  render () {\n    const { amiibo, addToCart } = this.props\n\n    return (\n      <Card elevation={3} className='n-product-card'>\n        <CardActionArea>\n          <CardMedia\n            className='n-product-card__image'\n            image={amiibo.image}\n            title={amiibo.character}\n          />\n          <CardContent>\n            <p>Personaje: {amiibo.name}</p>\n            <p>Serie : {amiibo.amiiboSeries}</p>\n            <p>Tipo: {amiibo.type}</p>\n            <p>Precio: $12.000 CLP</p>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Fab\n            variant=\"extended\"\n            size=\"medium\"\n            color=\"primary\"\n            onClick={() => addToCart(amiibo)}\n          >\n            Agregar \n        </Fab>\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nexport default AmiiboCard","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nimport AmiiboCard from '../components/description_card'\n\nclass ProductView extends React.Component {\n  render () {\n\n    const { products = [], pending, addToCart } = this.props\n\n    return (\n      <Grid container\n        spacing={3}\n        justify=\"center\"\n        alignItems=\"center\">\n        {pending && <CircularProgress/>}\n        {products.map((amiibo) => (\n          <Grid item xs={3}>\n            <AmiiboCard amiibo={amiibo} addToCart={addToCart}></AmiiboCard>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default ProductView\n\n\n\n","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass CartView extends React.Component {\n  render () {\n\n    const { cartProducts =[] } = this.props\n\n    return (\n      <Grid direction=\"row\">\n         <Grid item sm={8}>\n          {cartProducts.map((amiibo) => (\n            <Paper className='n-cart-item'>\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"space-evenly\"\n              >\n                <Grid item xs={2}>\n                  <img src={amiibo.image} alt={amiibo.name} style={{ width: '55px' }} />\n                </Grid>\n                <Grid item xs={2}>\n                  <p>Nombre</p>\n                  <p>{amiibo.name}</p>\n                </Grid>\n                <Grid item xs={2}>\n                  <p>Serie</p>\n                  <p>{amiibo.gameSeries}</p>\n                </Grid>\n                <Grid item xs={2}>\n                  <p>tipo</p>\n                  <p>{amiibo.type}</p>\n                </Grid>\n                <Grid>\n                  <Fab>\n                    <DeleteIcon onClick={() => this.props.deleteFromCart(amiibo.name)}/>\n                  </Fab>\n                </Grid>\n              </Grid>\n            </Paper>\n          ))}\n         </Grid>\n         <Grid item sm={3}>\n           <Paper style={{padding:'30px'}}>\n              <h3>Checkout</h3>\n              <p>Cantidad Productos: {cartProducts.length}</p>\n              <p>Total Productos: $30.000 CLP</p>\n           </Paper>\n         </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default CartView\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\n\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nimport { \n  fetchProducts, \n  addToCart,\n  deleteFromCart \n} from '../actions'\n\nimport ProductView from '../components/product_view'\nimport CartView from '../components/cart_view'\n\nclass MainContent extends React.Component {\n  componentDidMount () {\n    this.props.fetchProducts()\n  }\n\n  renderCart () {\n    return (\n      <Popper\n        className='n-cart-display'\n        placement=\"bottom\"\n        open={true}\n        disablePortal={false}\n      >\n        <Paper className='n-cart-display__content'>\n          {this.props.cartProducts.map((item) => (\n            <p>\n              {item.name}\n              <DeleteIcon\n                onClick={() => this.props.deleteFromCart(item.name)} />\n            </p>\n          ))}\n         <Link to='/Cart'>\n            <Button color='primary'>\n              <ShoppingCartIcon/>\n              Ir a Carrito\n            </Button>\n         </Link>\n        </Paper>\n      </Popper>\n    )\n  }\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<AppBar position=\"static\" className='n-appbar'>\n\t\t\t\t\t<Toolbar>\n            <Link to='/'>\n              <img\n                className='n-appbar__image'\n                src='https://vignette.wikia.nocookie.net/es.pokemon/images/3/3b/Logo_de_amiibo.png/revision/latest?cb=20150909205748'\n                alt='amibo' />\n            </Link>\n            <Link to='/Cart'>Mi Carrito de compras</Link>\n            {this.renderCart()}\n          </Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Container fixed>\n\t\t\t\t\t<h3>Amiibo SHOP </h3>\n          <Switch>\n            <Route exact path=\"/\" component={(props) => \n              <ProductView \n              products={this.props.products} \n              pending={this.props.pending} \n              cartProducts={this.props.cartProducts} \n              addToCart={this.props.addToCart} />} \n            />\n            <Route \n              exact \n              path=\"/Cart\" \n              component={(props) => \n              <CartView cartProducts={this.props.cartProducts}\n              deleteFromCart={this.props.deleteFromCart}/>} \n              />\n          </Switch>\n\t\t\t\t</Container>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  pending: state.pending,\n  cartProducts: state.addedProducts\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchProducts: fetchProducts,\n  addToCart: addToCart,\n  deleteFromCart: deleteFromCart\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainContent);\n\n\n\n","import React from 'react';\nimport MainContent from './containers/main_content';\nimport './App.css';\n\nfunction App() {\n  return (\n    <MainContent />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}